openapi: 3.0.0
info:
  title: Quota API
  description: Free tier quota checking for RetroPhoto MVP
  version: 1.0.0
  contact:
    name: RetroPhoto API
    url: https://retrophoto.app

servers:
  - url: https://retrophoto.app/api
    description: Production
  - url: http://localhost:3000/api
    description: Local development

paths:
  /quota:
    get:
      summary: Check user quota remaining
      description: |
        Returns free tier quota status for a given browser fingerprint.
        Used to show/hide upgrade prompts and prevent quota abuse.

        Constitutional requirement (Principle VII: Tasteful Monetization):
        - Free tier: 1 restore per fingerprint
        - Quota enforced server-side (client cannot bypass)

      operationId: checkQuota
      tags:
        - Quota

      parameters:
        - name: fingerprint
          in: query
          required: true
          description: Browser fingerprint from FingerprintJS
          schema:
            type: string
            minLength: 20
            maxLength: 64
          example: "a1b2c3d4e5f67890abcdef1234567890"

      responses:
        '200':
          description: Quota status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  remaining:
                    type: integer
                    description: Number of free restores remaining
                    minimum: 0
                    maximum: 1
                    example: 0
                  limit:
                    type: integer
                    description: Total free tier limit
                    enum: [1]
                    example: 1
                  requires_upgrade:
                    type: boolean
                    description: Whether user needs to upgrade (remaining == 0)
                    example: true
                  upgrade_url:
                    type: string
                    format: uri
                    description: URL to upgrade flow (only present if requires_upgrade == true)
                    example: "https://retrophoto.app/upgrade"
                  last_restore_at:
                    type: string
                    format: date-time
                    description: Timestamp of most recent restore (null if no restores)
                    nullable: true
                    example: "2025-10-02T14:32:15Z"
                required:
                  - remaining
                  - limit
                  - requires_upgrade

        '400':
          description: Invalid fingerprint parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Invalid or missing fingerprint parameter."
                  error_code:
                    type: string
                    enum:
                      - INVALID_FINGERPRINT
                      - MISSING_FINGERPRINT
                    example: "INVALID_FINGERPRINT"

        '500':
          description: Internal server error (database connection failure)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Failed to retrieve quota status. Please try again."
                  error_code:
                    type: string
                    enum:
                      - DATABASE_ERROR
                    example: "DATABASE_ERROR"

      security:
        - {}  # No authentication required for MVP

components:
  securitySchemes: {}

tags:
  - name: Quota
    description: Free tier quota management
